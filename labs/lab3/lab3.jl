# LAB_3

using Plots
using DifferentialEquations

# Начальные условия и параметры для первого случая
x0 = 87700  # Начальное количество войск страны X
y0 = 91400  # Начальное количество войск страны Y
a1 = 0.354  # Коэффициент a для первого случая
b1 = 0.765  # Коэффициент b для первого случая
c1 = 0.679  # Коэффициент c для первого случая
h1 = 0.845  # Коэффициент h для первого случая

P1(t) = sin(t + 10)  # Функция P для первого случая
Q1(t) = cos(t + 15)  # Функция Q для первого случая

# Параметры для второго случая
a2 = 0.505  # Коэффициент a для второго случая
b2 = 0.77   # Коэффициент b для второго случая
c2 = 0.6    # Коэффициент c для второго случая
h2 = 0.404  # Коэффициент h для второго случая

# Функции P и Q для второго случая
P2(t) = sin(2 * t) + 2  # Функция P для второго случая
Q2(t) = cos(5 * t) + 2  # Функция Q для второго случая

u0 = [x0, y0]  # Вектор начальных условий
tspan = (0.0, 30.0)  # Интервал времени для моделирования

# Функция для первого случая боевых действий
function combat_regular!(du, u, p, t)
    du[1] = -a1 * u[1] - b1 * u[2] + P1(t)
    du[2] = -c1 * u[1] - h1 * u[2] + Q1(t)
end

# Функция для второго случая с учетом партизанских отрядов
function combat_irregular!(du, u, p, t)
    du[1] = -a2 * u[1] - b2 * u[2] + P2(t)
    du[2] = -c2 * u[1] - h2 * u[2] + Q2(t)
end

# Решение задачи для первого случая
prob1 = ODEProblem(combat_regular!, u0, tspan)
sol1 = solve(prob1, saveat=t)

# Решение задачи для второго случая
prob2 = ODEProblem(combat_irregular!, u0, tspan)
sol2 = solve(prob2, saveat=t)

# Графики решений для обоих случаев
p1 = plot(sol1, label=["Армия X" "Армия Y"], title="Первый случай")
p2 = plot(sol2, label=["Армия X" "Армия Y"], title="Второй случай")

# Отображение графиков в одном окне
plot(p1, p2, layout=(2, 1))

# Сохранение графиков в файл
savefig("scenarios.png")
